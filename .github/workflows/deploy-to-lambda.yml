name: Deploy to AWS Lambda

on:
  push:
    branches:
  workflow_dispatch:

permissions:
      id-token: write
      contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: arn:aws:iam::188272061734:role/he-play-for-us-github-action
        aws-region: us-east-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      with:
        mask-password: 'true'

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: heplayforus
      run: |
        IMAGE_TAG=$(date +'%Y%m%d%H%M%S')
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image_uri::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_ENV

    - name: Deploy to Lambda
      run: |
          echo "${{ steps.build-image.outputs.image_uri }}"echo "${{ steps.build-image.outputs.image_uri }}"
          aws lambda update-function-code --function-name heplayforus --image-uri ${{ steps.build-image.outputs.image_uri }}
      env:
        AWS_REGION: us-east-2
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
